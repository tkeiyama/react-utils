import { FC, ReactNode } from "react";
export type ThemeTypes = "light" | "dark";
export interface ThemeContextProps {
    /**
     * An application's theme.
     */
    theme: ThemeTypes;
    /**
     * A handler to change a theme.
     *
     * @param theme set as a next theme.
     */
    changeTheme: (theme?: ThemeTypes) => void;
}
export interface ThemeProviderProps {
    /**
     * Component(s) which need to be provided a theme.
     */
    children: ReactNode;
    /**
     * A default theme.
     */
    defaultTheme?: ThemeTypes;
}
/**
 * A React provider component to give an application the theme.
 *
 * @param defaultTheme which provided to an application as the default theme. The default is `light`
 */
export declare const ThemeProvider: FC<ThemeProviderProps>;
/**
 * A react hook returns `theme` and `changeTheme`.
 *
 * This function won't work unless you wrap component(s) by the `ThemeProvider` component.
 */
export declare const useTheme: () => ThemeContextProps;
